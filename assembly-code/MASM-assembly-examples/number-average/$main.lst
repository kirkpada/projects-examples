Microsoft (R) Macro Assembler Version 12.00.21005.1	    02/05/14 20:45:34
MASM Template						(main.asm  Page 1 - 1


				TITLE MASM Template						(main.asm)

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
				;For Constants
 = 00000014			MAXLENGTH = 20
 = 00000065			MAXVALUE = 101
 =-00000001			MINVALUE = -1
				;For Strings
 00000000 4E 61 6D 65 3A	progName BYTE "Name: Daniel Kirkpatrick",0dh,0ah,0
	   20 44 61 6E 69
	   65 6C 20 4B 69
	   72 6B 70 61 74
	   72 69 63 6B 0D
	   0A 00
 0000001B 54 69 74 6C 65	progTitle BYTE "Title: Average Calculator",0dh,0ah,0
	   3A 20 41 76 65
	   72 61 67 65 20
	   43 61 6C 63 75
	   6C 61 74 6F 72
	   0D 0A 00
 00000037 50 6C 65 61 73	userName BYTE "Please enter your name: ",0
	   65 20 65 6E 74
	   65 72 20 79 6F
	   75 72 20 6E 61
	   6D 65 3A 20 00
 00000050 48 65 6C 6C 6F	greeting1 BYTE "Hello, ",0
	   2C 20 00
 00000058 21 0D 0A 00		greeting2 BYTE "!",0dh,0ah,0
 0000005C 57 65 6C 63 6F	greeting3 BYTE "Welcome to the Average Calculator!",0dh,0ah,0
	   6D 65 20 74 6F
	   20 74 68 65 20
	   41 76 65 72 61
	   67 65 20 43 61
	   6C 63 75 6C 61
	   74 6F 72 21 0D
	   0A 00
 00000081  00000015 [		userNameInput BYTE MAXLENGTH+1 DUP(?)
	    00
	   ]
 00000096 50 6C 65 61 73	instruct1 BYTE "Please enter a number between 0 and 100: ",0dh,0ah,0
	   65 20 65 6E 74
	   65 72 20 61 20
	   6E 75 6D 62 65
	   72 20 62 65 74
	   77 65 65 6E 20
	   30 20 61 6E 64
	   20 31 30 30 3A
	   20 0D 0A 00
 000000C2 54 6F 20 65 78	instruct2 BYTE "To exit program and get average enter a NEGATIVE number!(Example: -3): ",0
	   69 74 20 70 72
	   6F 67 72 61 6D
	   20 61 6E 64 20
	   67 65 74 20 61
	   76 65 72 61 67
	   65 20 65 6E 74
	   65 72 20 61 20
	   4E 45 47 41 54
	   49 56 45 20 6E
	   75 6D 62 65 72
	   21 28 45 78 61
	   6D 70 6C 65 3A
	   20 2D 33 29 3A
	   20 00
 0000010A 45 6E 74 65 72	sumInstruct1 BYTE "Enter another number between 0 and 100.",0dh,0ah,0
	   20 61 6E 6F 74
	   68 65 72 20 6E
	   75 6D 62 65 72
	   20 62 65 74 77
	   65 65 6E 20 30
	   20 61 6E 64 20
	   31 30 30 2E 0D
	   0A 00
 00000134 54 6F 20 65 78	sumInstruct2 BYTE "To exit program and get average enter a NEGATIVE number!(Example: -3): ",0
	   69 74 20 70 72
	   6F 67 72 61 6D
	   20 61 6E 64 20
	   67 65 74 20 61
	   76 65 72 61 67
	   65 20 65 6E 74
	   65 72 20 61 20
	   4E 45 47 41 54
	   49 56 45 20 6E
	   75 6D 62 65 72
	   21 28 45 78 61
	   6D 70 6C 65 3A
	   20 2D 33 29 3A
	   20 00
 0000017C 59 6F 75 20 65	errorGreater1 BYTE "You entered a number to big.",0dh,0ah,0
	   6E 74 65 72 65
	   64 20 61 20 6E
	   75 6D 62 65 72
	   20 74 6F 20 62
	   69 67 2E 0D 0A
	   00
 0000019B 45 6E 74 65 72	errorGreater2 BYTE "Enter another number between 0-100: ",0
	   20 61 6E 6F 74
	   68 65 72 20 6E
	   75 6D 62 65 72
	   20 62 65 74 77
	   65 65 6E 20 30
	   2D 31 30 30 3A
	   20 00
 000001C0 59 6F 75 20 65	errorLesser1 BYTE "You entered a negative number!",0dh,0ah,0
	   6E 74 65 72 65
	   64 20 61 20 6E
	   65 67 61 74 69
	   76 65 20 6E 75
	   6D 62 65 72 21
	   0D 0A 00
 000001E1 45 78 69 74 69	errorLesser2 BYTE "Exiting program! Bye, ",0
	   6E 67 20 70 72
	   6F 67 72 61 6D
	   21 20 42 79 65
	   2C 20 00
 000001F8 54 68 65 20 73	sumCheck BYTE "The sum after adding is: ",0
	   75 6D 20 61 66
	   74 65 72 20 61
	   64 64 69 6E 67
	   20 69 73 3A 20
	   00
 00000212 59 6F 75 20 68	rounds1 BYTE "You have entered ",0
	   61 76 65 20 65
	   6E 74 65 72 65
	   64 20 00
 00000224 20 6E 75 6D 62	rounds2 BYTE " numbers.",0
	   65 72 73 2E 00
 0000022E 4E 75 6D 62 65	fCount BYTE "Number of non-negative numbers entered: ",0
	   72 20 6F 66 20
	   6E 6F 6E 2D 6E
	   65 67 61 74 69
	   76 65 20 6E 75
	   6D 62 65 72 73
	   20 65 6E 74 65
	   72 65 64 3A 20
	   00
 00000257 53 75 6D 20 6F	fSum BYTE "Sum of all non-negative numbers is: ",0
	   66 20 61 6C 6C
	   20 6E 6F 6E 2D
	   6E 65 67 61 74
	   69 76 65 20 6E
	   75 6D 62 65 72
	   73 20 69 73 3A
	   20 00
 0000027C 54 68 65 20 61	fAvg BYTE "The average rounded to the nearest integer is: ",0
	   76 65 72 61 67
	   65 20 72 6F 75
	   6E 64 65 64 20
	   74 6F 20 74 68
	   65 20 6E 65 61
	   72 65 73 74 20
	   69 6E 74 65 67
	   65 72 20 69 73
	   3A 20 00
				;For Numbers
 000002AC 00000000		inputNum DWORD ?
 000002B0 00000000		sum DWORD ?
 000002B4 00000000		counter DWORD ?
 000002B8 00000000		finalCount DWORD ?
 000002BC 00000000		finalSum DWORD ?
 000002C0 00000000		average1 DWORD ?
 000002C4 00000000		average2 DWORD ?



 00000000			.code
 00000000			main PROC
					;Output programmer name and title of program
 00000000  BA 00000000 R		mov edx, OFFSET progName
 00000005  E8 00000000 E		call WriteString
 0000000A  BA 0000001B R		mov edx, OFFSET progTitle
 0000000F  E8 00000000 E		call WriteString
 00000014  E8 00000000 E		call Crlf

					;Get user's name and greet user
 00000019  BA 00000037 R		mov edx, OFFSET userName
 0000001E  E8 00000000 E		call WriteString
 00000023  BA 00000081 R		mov edx, OFFSET userNameInput
 00000028  B9 00000014			mov ecx, MAXLENGTH
 0000002D  E8 00000000 E		call ReadString
 00000032  E8 00000000 E		call Crlf
 00000037  BA 00000050 R		mov edx, OFFSET greeting1
 0000003C  E8 00000000 E		call WriteString
 00000041  BA 00000081 R		mov edx, OFFSET userNameInput
 00000046  E8 00000000 E		call WriteString
 0000004B  BA 00000058 R		mov edx, OFFSET greeting2
 00000050  E8 00000000 E		call WriteString
 00000055  E8 00000000 E		call Crlf
 0000005A  BA 0000005C R		mov edx, OFFSET greeting3
 0000005F  E8 00000000 E		call WriteString
 00000064  E8 00000000 E		call Crlf
 00000069  BA 00000096 R		mov edx, OFFSET instruct1
 0000006E  E8 00000000 E		call WriteString
 00000073  BA 000000C2 R		mov edx, OFFSET instruct2
 00000078  E8 00000000 E		call WriteString
 0000007D  E8 00000000 E		call ReadInt
 00000082  A3 000002AC R		mov inputNum, eax
 00000087  EB 00			jmp numCheck
					
					;used to check if number is within correct number range
					;error handling section
 00000089				numCheck:
 00000089  A1 000002AC R			mov eax, inputNum
 0000008E  83 F8 65				cmp eax, MAXVALUE
 00000091  7D 07				jnl greater 			;jumps if value is greater than 100
 00000093  83 F8 FF				cmp eax, MINVALUE
 00000096  7E 2C				jng lesser 			;jumps if value is less than 0
 00000098  EB 79				jmp correctValue 	;jumps if value is correct and program proceeds
 0000009A				greater:
					;if number is greater than 100 it will ask for a new input
 0000009A  E8 00000000 E			call Crlf
 0000009F  E8 00000000 E			call Crlf
 000000A4  BA 0000017C R			mov edx, OFFSET errorGreater1
 000000A9  E8 00000000 E			call WriteString
 000000AE  BA 0000019B R			mov edx, OFFSET errorGreater2
 000000B3  E8 00000000 E			call WriteString
 000000B8  E8 00000000 E			call ReadInt
 000000BD  A3 000002AC R			mov inputNum, eax
 000000C2  EB C5				jmp numCheck
 000000C4				lesser:
					;if number is negative it will calculate average and exit program
 000000C4  BA 00000000				mov edx, 0
 000000C9  A1 000002B0 R			mov eax, sum
 000000CE  A3 000002BC R			mov finalSum, eax
 000000D3  A1 000002B4 R			mov eax, counter
 000000D8  A3 000002B8 R			mov finalCount, eax
 000000DD  A1 000002BC R			mov eax, finalSum
 000000E2  8B 1D 000002B8 R			mov ebx, finalCount
 000000E8  F7 F3				div ebx
 000000EA  A3 000002C0 R			mov average1, eax
 000000EF  89 15 000002C4 R			mov average2, edx
 000000F5					correction:
 000000F5  A1 000002C4 R				mov eax, average2
 000000FA  83 F8 05					cmp eax, 5
 000000FD  7D 02					jge fix
 000000FF  7C 0D					jl continue
 00000101						fix:
 00000101  A1 000002C0 R					mov eax, average1
 00000106  83 C0 01						add eax, 1
 00000109  A3 000002C0 R					mov average1, eax
 0000010E						continue:

 0000010E  E9 0000008D					jmp finalInformation

 00000113				correctValue:
					;if number is in correct range it will add to sum
 00000113  A3 000002AC R			mov inputNum, eax
 00000118  A1 000002B0 R			mov eax, sum
 0000011D  03 05 000002AC R			add eax, inputNum
 00000123  A3 000002B0 R			mov sum, eax
 00000128  BA 000001F8 R			mov edx, OFFSET sumCheck
 0000012D  E8 00000000 E			call WriteString
 00000132  E8 00000000 E			call WriteInt
 00000137  E8 00000000 E			call Crlf
 0000013C  EB 00				jmp driver

 0000013E				driver:
 0000013E					numCounter:
						;counts how many numbers are entered
 0000013E  B9 00000000					mov ecx, 0
 00000143  8B 0D 000002B4 R				mov ecx, counter
 00000149  41						inc ecx
 0000014A  89 0D 000002B4 R				mov counter, ecx
 00000150  BA 00000212 R				mov edx, OFFSET rounds1
 00000155  E8 00000000 E				call WriteString
 0000015A  A1 000002B4 R				mov eax, counter
 0000015F  E8 00000000 E				call WriteInt
 00000164  BA 00000224 R				mov edx, OFFSET rounds2
 00000169  E8 00000000 E				call WriteString
 0000016E  E8 00000000 E				call Crlf
 00000173  E8 00000000 E				call Crlf
 00000178					nextInput:
						;gets the next input from the user
 00000178  A1 000002B0 R				mov eax, sum
 0000017D  BA 0000010A R				mov edx, OFFSET sumInstruct1
 00000182  E8 00000000 E				call WriteString
 00000187  BA 00000134 R				mov edx, OFFSET sumInstruct2
 0000018C  E8 00000000 E				call WriteString
 00000191  E8 00000000 E				call ReadInt
 00000196  A3 000002AC R				mov inputNum, eax
 0000019B  E9 FFFFFEE9					jmp numCheck

 000001A0				finalInformation:
					;prints out number of numbers entered, sum and average
 000001A0  E8 00000000 E			call Crlf
 000001A5  E8 00000000 E			call Crlf
 000001AA  E8 00000000 E			call Crlf
 000001AF  BA 000001C0 R			mov edx, OFFSET errorLesser1
 000001B4  E8 00000000 E			call WriteString
 000001B9  E8 00000000 E			call Crlf
 000001BE  BA 0000022E R			mov edx, OFFSET fCount
 000001C3  A1 000002B8 R			mov eax, finalCount
 000001C8  E8 00000000 E			call WriteString
 000001CD  E8 00000000 E			call WriteInt
 000001D2  E8 00000000 E			call Crlf
 000001D7  BA 00000257 R			mov edx, OFFSET fSum
 000001DC  A1 000002BC R			mov eax, finalSum
 000001E1  E8 00000000 E			call WriteString
 000001E6  E8 00000000 E			call WriteInt
 000001EB  E8 00000000 E			call Crlf
 000001F0  BA 0000027C R			mov edx, OFFSET fAvg
 000001F5  A1 000002C0 R			mov eax, average1
 000001FA  E8 00000000 E			call WriteString
 000001FF  E8 00000000 E			call WriteInt
 00000204  E8 00000000 E			call Crlf
 00000209  EB 00				jmp progExit

 0000020B				progExit:
					;parting message and program exit
 0000020B  E8 00000000 E			call Crlf
 00000210  E8 00000000 E			call Crlf
 00000215  BA 000001E1 R			mov edx, OFFSET errorLesser2
 0000021A  E8 00000000 E			call WriteString
 0000021F  BA 00000081 R			mov edx,OFFSET userNameInput
 00000224  E8 00000000 E			call WriteString
 00000229  E8 00000000 E			call Crlf
 0000022E  E8 00000000 E			call Crlf

					exit
 0000023A			main ENDP

				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    02/05/14 20:45:34
MASM Template						(main.asm  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000002C8 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000023A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000023A Public STDCALL
  numCheck . . . . . . . . . . .	L Near	 00000089 _TEXT	
  greater  . . . . . . . . . . .	L Near	 0000009A _TEXT	
  lesser . . . . . . . . . . . .	L Near	 000000C4 _TEXT	
  correction . . . . . . . . . .	L Near	 000000F5 _TEXT	
  fix  . . . . . . . . . . . . .	L Near	 00000101 _TEXT	
  continue . . . . . . . . . . .	L Near	 0000010E _TEXT	
  correctValue . . . . . . . . .	L Near	 00000113 _TEXT	
  driver . . . . . . . . . . . .	L Near	 0000013E _TEXT	
  numCounter . . . . . . . . . .	L Near	 0000013E _TEXT	
  nextInput  . . . . . . . . . .	L Near	 00000178 _TEXT	
  finalInformation . . . . . . .	L Near	 000001A0 _TEXT	
  progExit . . . . . . . . . . .	L Near	 0000020B _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MAXLENGTH  . . . . . . . . . . .	Number	 00000014h   
MAXVALUE . . . . . . . . . . . .	Number	 00000065h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MINVALUE . . . . . . . . . . . .	Number	 -00000001h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
average1 . . . . . . . . . . . .	DWord	 000002C0 _DATA	
average2 . . . . . . . . . . . .	DWord	 000002C4 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
counter  . . . . . . . . . . . .	DWord	 000002B4 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
errorGreater1  . . . . . . . . .	Byte	 0000017C _DATA	
errorGreater2  . . . . . . . . .	Byte	 0000019B _DATA	
errorLesser1 . . . . . . . . . .	Byte	 000001C0 _DATA	
errorLesser2 . . . . . . . . . .	Byte	 000001E1 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fAvg . . . . . . . . . . . . . .	Byte	 0000027C _DATA	
fCount . . . . . . . . . . . . .	Byte	 0000022E _DATA	
fSum . . . . . . . . . . . . . .	Byte	 00000257 _DATA	
finalCount . . . . . . . . . . .	DWord	 000002B8 _DATA	
finalSum . . . . . . . . . . . .	DWord	 000002BC _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
greeting1  . . . . . . . . . . .	Byte	 00000050 _DATA	
greeting2  . . . . . . . . . . .	Byte	 00000058 _DATA	
greeting3  . . . . . . . . . . .	Byte	 0000005C _DATA	
inputNum . . . . . . . . . . . .	DWord	 000002AC _DATA	
instruct1  . . . . . . . . . . .	Byte	 00000096 _DATA	
instruct2  . . . . . . . . . . .	Byte	 000000C2 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
progName . . . . . . . . . . . .	Byte	 00000000 _DATA	
progTitle  . . . . . . . . . . .	Byte	 0000001B _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
rounds1  . . . . . . . . . . . .	Byte	 00000212 _DATA	
rounds2  . . . . . . . . . . . .	Byte	 00000224 _DATA	
sumCheck . . . . . . . . . . . .	Byte	 000001F8 _DATA	
sumInstruct1 . . . . . . . . . .	Byte	 0000010A _DATA	
sumInstruct2 . . . . . . . . . .	Byte	 00000134 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000002B0 _DATA	
userNameInput  . . . . . . . . .	Byte	 00000081 _DATA	
userName . . . . . . . . . . . .	Byte	 00000037 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
